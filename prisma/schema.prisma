// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}


model Job{
id String @id @default(auto()) @map("_id") @db.ObjectId
userId String
title String
description String?
short_description String?
imageUrl String?
isPublished Boolean @default(false)
tags String[]
shiftTiming String?
hourlyRate String?
yearsofExperience String?
workMode String?
categoryId String? @db.ObjectId
category Category? @relation (fields:[categoryId],references:[id])
companyId String? @db.ObjectId
company Company? @relation(fields:[companyId],references: [id])
createdAt DateTime @default(now())
updatedAt DateTime @default(now())
@@index([categoryId])
@@index([companyId])
@@fulltext([title])
}

model Company{
  id String @id  @default(auto()) @map("_id") @db.ObjectId
  userId String
  name String
  description String?
  logo String?
  coverImage String?
  mail String?
  website String?
linkedIn String?
address_line_1 String?
address_line_2 String?
city String?
state String?
zipcode String?
jobs Job[]
followers String[]
overview String?
whyJoinUs String?
createdAt DateTime @default(now())
updatedAt DateTime @default(now())

  @@index([createdAt])
}


model Category{
  id String @id  @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  jobs Job[]
  createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

}

model UserProfile{
  userId String @id @map("_id")
  fullName String?
  email String?
  contact String?
  appliedJobs AppliedJob[]
}
type AppliedJob{
  jobId String?
  appliedAt DateTime @default(now())
}